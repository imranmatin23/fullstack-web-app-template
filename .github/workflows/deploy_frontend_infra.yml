name: Frontend Infrastructure Deploy
run-name: ${{ github.sha }}

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - infra/frontend/**

env:
  TF_VAR_region: ${{ vars.FRONTEND_INFRA_REGION }}
  TF_VAR_project_name: ${{ vars.FRONTEND_INFRA_PROJECT_NAME }}
  TF_VAR_gh_personal_access_token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
  TF_VAR_gh_repository: ${{ vars.FRONTEND_INFRA_GH_REPOSITORY }}
  TF_VAR_domain_name: ${{ vars.FRONTEND_INFRA_DOMAIN_NAME }}
  TF_VAR_sub_domain_prefix: ${{ vars.FRONTEND_INFRA_SUB_DOMAIN_PREFIX }}
  TF_VAR_backend_url: ${{ vars.FRONTEND_INFRA_BACKEND_URL }}

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra/frontend

    steps:
      # Clone the Repository
      - name: Checkout
        uses: actions/checkout@v3

      # Generate temporary AWS credentials by assuming a role (https://aws.amazon.com/blogs/security/use-iam-roles-to-connect-github-actions-to-actions-in-aws/)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::775627766428:role/ecr-image-push-role
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ vars.FRONTEND_INFRA_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: |
          terraform init

      - name: Terraform Plan
        run: |
          terraform plan -no-color -input=false

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve -input=false
